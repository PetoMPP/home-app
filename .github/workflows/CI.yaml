name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  # Run cargo test
  test-workspace:
    name: Test Workspace
    runs-on: ubuntu-latest
    env:
      API_SECRET: just-to-pass-the-build-for-testing
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.toml') }}
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install Dependencies
        run: sudo apt-get update; sudo apt-get install pkg-config libx11-dev libasound2-dev libudev-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  compile-sensor:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: home-sensor

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create my-secret.h
        run: |
          echo "#pragma once" > my-secret.h
          echo "char ssid[] = \"ssid\";" >> my-secret.h
          echo "char pass[] = \"password\";" >> my-secret.h

      - name: Compile sketch
        uses: arduino/compile-sketches@v1
        with:
          sketch-paths: ./
          libraries: |
            - name: "Adafruit Unified Sensor"
            - name: "ArduinoJson"
            - name: "DHT sensor library"
            - name: "UUID"
          fqbn: "esp32:esp32:esp32"

  # Run cargo clippy -- -D warnings
  clippy_check:
    name: Clippy
    runs-on: ubuntu-latest
    env:
      API_SECRET: just-to-pass-the-build-for-testing
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.toml') }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Run clippy
        run: cargo clippy -- -D warnings

  # Run cargo fmt --all -- --check
  format:
    name: Format
    runs-on: ubuntu-latest
    env:
      API_SECRET: just-to-pass-the-build-for-testing
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - run: cargo fmt --all -- --check
