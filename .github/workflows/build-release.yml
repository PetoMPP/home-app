name: "build-release"

on:
  workflow_dispatch:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"
    paths:
      - "home-api/src/**"
      - "home-api/templates/**"
      - "home-api/assets/**"
      - "home-api/build.rs"
      - "home-api/Cargo.toml"
      - "home-api/Cargo.lock"
      - "home-api/input.css"
      - "home-api/package.json"
      - "home-api/package-lock.json"
      - "home-api/tailwind.config.js"

jobs:
  release-arm64:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: home-api
    env:
      BRANCH: ${{ github.ref }}
      RETENTION_DAYS: 0

    steps:
      - uses: actions/checkout@v4
      - uses: uraimo/run-on-arch-action@v2
        id: rust-aarch64
        with:
          arch: aarch64
          distro: ubuntu_latest
          base_image: rust:latest
          # Not required, but speeds up builds
          githubToken: ${{ github.token }}
          setup: |
            mkdir -p "${PWD}/artifacts"
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
            -e API_SECRET=${{secrets.API_SECRET}}
          shell: /bin/bash
          run: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.0/install.sh | bash
            source ~/.bashrc
            cd home-api
            nvm install 18
            npm install
            npm install npx
            cargo build --release --features vendored
            cp target/release/home-api /artifacts
      
      - name: Set retention for artifacts
        run: |
          if [[ $BRANCH == 'refs/heads/main' ]]; then
            echo "RETENTION_DAYS=90"
          else
            echo "RETENTION_DAYS=3"
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: home-api-arm64
          retention-days: ${{ env.RETENTION_DAYS }}
          path: ./artifacts

          
  compile-sensor:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: home-sensor

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create secret.h
        run: |
          echo "#pragma once" > src/secret.h
          echo "char ssid[] = \"ssid\";" >> src/secret.h
          echo "char pass[] = \"password\";" >> src/secret.h

      - name: Compile sketch
        uses: arduino/compile-sketches@v1
        with:
          sketch-paths: ./
          libraries: |
            - name: "Adafruit Unified Sensor"
            - name: "ArduinoJson"
            - name: "DHT sensor library"
            - name: "UUID"
          fqbn: "esp32:esp32:esp32"

      - run: ls -a
